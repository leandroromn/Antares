//
//  MovieDetailsInteractor.swift
//  Antares
//
//  Created by Leandro Romano on 24/08/19.
//  Copyright (c) 2019 Leandro Romano. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsBusinessLogic {
    func requestDetails()
}

protocol MovieDetailsDataStore {
    var movieId: Int? { get set }
}

class MovieDetailsInteractor: MovieDetailsBusinessLogic, MovieDetailsDataStore {

    var presenter: MovieDetailsPresentationLogic?
    var worker: MovieDetailsWorker?
    var movieId: Int?
    
    init(worker: MovieDetailsWorker = MovieDetailsWorker()) {
        self.worker = worker
    }

    func requestDetails() {
        guard let movieId = movieId else { return }
        presenter?.presentLoading()
        worker?
            .retrieveDetailsForMovie(id: movieId)
            .done(handleRequestDetailsSuccess)
            .catch(handleRequestDetailsError)
            .finally { [weak self] in
                self?.presenter?.hideLoading()
            }
    }
    
    private func handleRequestDetailsSuccess(_ response: MovieDetails.Response) {
        presenter?.presentDetails(response)
    }
    
    private func handleRequestDetailsError(_ error: Error) {
        presenter?.presentError(error)
    }

}

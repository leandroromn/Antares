//
//  ListMoviesViewController.swift
//  Antares
//
//  Created by Leandro Romano on 05/05/19.
//  Copyright (c) 2019 Leandro Romano. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

protocol ListMoviesDisplayLogic: class {
    func displayDynamicData()
    func displayError(_ error: Error)
}

class ListMoviesViewController: UIViewController {

    // MARK: - Clean Swift Setup
    
    var interactor: ListMoviesBusinessLogic?
    var router: (NSObjectProtocol & ListMoviesRoutingLogic & ListMoviesDataPassing)?
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    private func setup() {
        let viewController = self
        let interactor = ListMoviesInteractor()
        let presenter = ListMoviesPresenter()
        let router = ListMoviesRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - View Cycles

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        requestMovies()
    }
    
    fileprivate func setupView() {

    }
    
    func requestMovies() {
        interactor?.getMovies(by: .nowPlaying)
    }

}

extension ListMoviesViewController: ListMoviesDisplayLogic {
    
    func displayDynamicData() {
        DispatchQueue.main.async { [weak self] in
            
        }
    }
    
    func displayError(_ error: Error) {
        let alertController = UIAlertController(title: "Error", message: error.localizedDescription, preferredStyle: .alert)
        alertController.addAction(UIAlertAction(title: "Close", style: .cancel))
        present(alertController, animated: true)
    }
    
}
